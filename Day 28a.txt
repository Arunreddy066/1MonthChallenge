class Solution 
{
    int nodeLevel(int V, ArrayList<ArrayList<Integer>> adj, int X) 
    {
        int n = adj.size();
        boolean[] visited = new boolean[n];
        Queue<int[]> queue = new ArrayDeque<>();
        visited[0] = true;
        queue.add(new int[]{0,0});
        while (!queue.isEmpty())
        {
            int arr[] = queue.poll();
            int node=arr[0];
            int level=arr[1];
            if(node==X)
            {
                return level;
            }
            for (int neighbor : adj.get(node)) 
            {
                if (!visited[neighbor]) 
                {
                    visited[neighbor] = true;
                    queue.add(new int[]{neighbor,level+1});
                }
            }
        }
        return -1;
    }
}