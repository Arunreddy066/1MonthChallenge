/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode reverseList(ListNode head) 
    {
        if(head==null)
        {
            return head;
        }
        if(head.next==null)
        {
            return head;
        }
        ListNode temp=head;
        Stack<Integer>s=new Stack<>();
        while(temp!=null)
        {
            s.push(temp.val);
            temp=temp.next;
        }
        temp=head;
        while(temp!=null)
        {
            temp.val=s.peek();
            s.pop();
            temp=temp.next;
        }
        // ListNode prev=null;
        // ListNode curr=head;
        // ListNode next=head;
        // while(curr!=null)
        // {
        //     next=curr.next;
        //     curr.next=prev;
        //     prev=curr;
        //     curr=next;
        // }
        return head;
    }
}