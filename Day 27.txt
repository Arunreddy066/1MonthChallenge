class Solution 
{
    class Pair
    {
        int row;
        int col;
        Pair(int row,int col)
        {
            this.row=row;
            this.col=col;
        }
    }
    public int[][] floodFill(int[][] image, int sr, int sc, int color) 
    {
        int n=image.length;
        int m=image[0].length;
        int visited[][]=new int[n][m];
        Queue<Pair>q=new LinkedList<>();
        int res=image[sr][sc];
        if(res==color)
        {
            return image;
        }
        image[sr][sc]=color;
        q.add(new Pair(sr,sc));
        int row[]={1,0,0,-1};
        int col[]={0,1,-1,0};
        while(!q.isEmpty())
        {
            Pair p=q.poll();
            int r=p.row;
            int c=p.col;
            for(int i=0;i<4;i++)
            {
                int nrow=r+row[i];
                int ncol=c+col[i];
                if(nrow>=0 && nrow<n && ncol>=0 && ncol<m)
                {
                    if(image[nrow][ncol]==res)
                    {
                        image[nrow][ncol]=color;
                        q.add(new Pair(nrow,ncol));
                    }
                }
            }
        }
        return image;
    }
}